{"version":3,"sources":["index.js","components/header/Header.js","utils/utils.js","components/clipform/ClipForm.js","components/sidebar/main/Main.js","components/sidebar/list/ListItem.js","components/sidebar/list/List.js","components/sidebar/Sidebar.js","components/content/Content.js","store/appstore.js","App.js","registerServiceWorker.js"],"names":["element","inject","observer","props","savePlayList","bind","state","code","showShareDialog","copied","closeShareDialog","onCopy","this","store","setState","url","JSON","stringify","clips","toJS","input","refs","inputcopy","inputRef","value","select","setTimeout","document","execCommand","inverted","clearing","as","floated","color","fitted","name","readonly","get","style","cursor","onClick","playlistState","size","open","onClose","Header","Content","ref","fluid","action","labelPosition","icon","content","defaultValue","Actions","negative","React","Component","TimeUtils","time_in_seconds","seconds","hours","minutes","carry_on","parseInt","Math","floor","round","digits","number","undefined","toString","start","end","update","showConfirm","onStartChange","onEndChange","onNameChange","addClip","onCancelUdpate","e","stateUpdate","target","duration","clip","main","id","updateClip","tu","placeholder","onChange","type","min","max","toTimeString","disabled","primary","onCancel","onConfirm","showForm","toggleForm","playNext","playPrevious","togglePlayer","body","onkeypress","ctrlKey","charCode","requestTogglePlayer","className","Meta","Row","Column","playerState","width","textAlign","Group","extra","display","editing","showDeleteConfirmDialog","onItemClick","onDeleteClick","toggleEditing","onCancelDeleteDialog","index","playClip","item","filter","removeClip","Tag","Description","playing","playlist","map","SemanticList","divided","verticalAlign","k","Item","key","Sidebar","onVideoLoaded","firstLoad","paused","setPlayerProperties","video","addEventListener","curr_clip_index","curr_clip","videoLoadingStarted","set","updatePlayerCurrentTime","currentTime","videoLoadingFinished","prevProps","prevState","play","pause","load","current_clip","is_loading","active","visibility","controls","onLoadedMetadata","preload","src","next_sent","observable","parse","localStorage","getItem","videoloading","playListChanged","reaction","Date","now","push","replace","c","remove","setItem","length","i","previous_index","count","next_index","time","current_clip_start_time","App","AppStore","setReadOnly","setPlayList","mobile","widescreen","largeScreen","computer","tablet","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","getElementById","getAttribute","ReactDOM","render","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cc06decb.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nvar element;\nif(document.getElementById('react-clipper'))\n{\n  element = document.getElementById('react-clipper');\n  let url = element.getAttribute('video-url');\n  let readonly = false;\n  let playlist = [];\n  if(element.getAttribute('readonly'))\n  {\n      readonly = true;\n  }\n  if(readonly)\n  if(element.getAttribute('data-playlist'))\n  {\n      playlist = JSON.parse(element.getAttribute('data-playlist'));\n  }\n\n  ReactDOM.render(<App url = {url} readonly = {readonly} playlist = {playlist} />, document.getElementById('react-clipper'));\n  registerServiceWorker();\n\n}\n","import React from 'react';\nimport { Segment, Icon, Header as H,Modal,Button,Input } from 'semantic-ui-react'\n\nimport {observer, inject} from 'mobx-react';\n\nexport default  inject('store')(observer(class Header extends React.Component {\n  constructor(props){\n    super(props);\n    this.savePlayList = this.savePlayList.bind(this);\n    this.state ={code:\"\",showShareDialog:false,copied:false}\n    this.showShareDialog = this.showShareDialog.bind(this);\n    this.closeShareDialog = this.closeShareDialog.bind(this);\n    this.onCopy = this.onCopy.bind(this);\n\n  }\n  savePlayList(){\n    this.props.store.savePlayList();\n  }\n  showShareDialog(){\n    this.setState({code:\"<div id='react-clipper' video-url='\"+this.props.url+\"' readonly='true' data-playlist='\"+JSON.stringify(this.props.store.clips.toJS())+\"' />\",showShareDialog:true});\n  }\n  closeShareDialog(){\n    this.setState({showShareDialog:false});\n  }\n  onCopy(){\n    let input = this.refs.inputcopy.inputRef;\n    input.value = this.state.code;\n    input.select()\n    this.setState({copied:true});\n    setTimeout(()=>{this.setState({copied:false})},5000)\n    document.execCommand(\"Copy\");\n  }\n  render() {\n    return (<Segment inverted clearing>\n      <H as=\"h4\" floated=\"left\" inverted color=\"blue\"><Icon fitted name=\"video\" />Clipper</H>\n      {!this.props.store.readonly.get()?\n        <H as=\"h3\" floated=\"right\" inverted style={{cursor:\"pointer\"}} onClick={this.showShareDialog} color={\"teal\"}> <Icon   fitted name=\"share\" /></H>\n        :\"\"\n      }\n      {!this.props.store.readonly.get()?\n        <H as=\"h3\" floated=\"right\" inverted style={{cursor:\"pointer\"}} onClick={this.savePlayList} color={this.props.store.playlistState.get('changed')?\"blue\":\"green\"}> <Icon   fitted name=\"save\" />{this.props.store.playlistState.get('changed')?\"Save changes...\":\"\"}</H>\n        :\"\"\n      }\n      <Modal size=\"tiny\" open={this.state.showShareDialog} onClose={this.closeShareDialog}>\n        <Modal.Header>\n          Share your playlist\n        </Modal.Header>\n        <Modal.Content>\n          <Input\n            ref=\"inputcopy\"\n            fluid\n            action={{ color: this.state.copied?'green':'teal', labelPosition: 'right', icon: 'copy', content: this.state.copied?'Copied!':'Copy',onClick:this.onCopy}}\n            defaultValue={this.state.code}\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={this.closeShareDialog} negative>\n            Cancel\n          </Button>\n\n        </Modal.Actions>\n      </Modal>\n    </Segment>);\n  }\n}))\n","export class TimeUtils {\n    toTimeString(time_in_seconds){\n      let hours = 0;\n      let minutes = 0;\n      let seconds = 0;\n      let carry_on=parseInt(time_in_seconds,10);\n      if(this.time_in_seconds>3600)\n      {\n        hours = Math.floor(carry_on/3600);\n        carry_on = carry_on % 3600;\n      }\n      if(this.time_in_seconds>60)\n      {\n        minutes = Math.floor(carry_on/60);\n        carry_on = carry_on % 60;\n      }\n      seconds = Math.round(carry_on);\n      return this.digits(hours)+\":\"+this.digits(minutes)+\":\"+this.digits(seconds);\n    }\n    digits(number){\n        if(number !== undefined)\n        return (number>9)? number.toString() : \"0\"+number.toString()\n        else\n        return \"\";\n    }\n\n}\n","import React from 'react';\nimport {Button,Icon,Input,Label,Confirm } from 'semantic-ui-react';\n\nimport {TimeUtils} from '../../utils/utils';\nimport {observer, inject} from 'mobx-react';\n\nimport './ClipForm.css';\n\nexport default inject('store')(observer(  class ClipForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {start:this.props.start,end:this.props.end,name:this.props.name,update:this.props.update,showConfirm:false,};\n    this.onStartChange = this.onStartChange.bind(this);\n    this.onEndChange = this.onEndChange.bind(this);\n    this.onNameChange = this.onNameChange.bind(this);\n    this.addClip = this.addClip.bind(this);\n    this.onCancelUdpate = this.onCancelUdpate.bind(this);\n    this.showConfirm = this.showConfirm.bind(this);\n  }\n  onStartChange(e){\n    let startValue = e.target.value;\n    let endValue = parseInt(e.target.value,10) + ((parseInt(e.target.value,10) < parseInt(this.props.store.duration.get(),10)) ? 1 : 0);\n\n    let stateUpdate = {\n      start:startValue,\n      end: endValue\n    };\n    this.setState(stateUpdate)\n\n  }\n  onEndChange(e){\n    this.setState({end:e.target.value})\n  }\n  onNameChange(e){\n    this.setState({name:e.target.value})\n  }\n  addClip(){\n    let clip = {name:this.state.name,start:this.state.start,end:this.state.end,main:false};\n    if(!this.props.update)\n    {\n      this.props.store.addClip(clip);\n      this.setState({name:\"\",start:0,end:0})\n    }else{\n      clip.id=this.props.id;\n      this.props.store.updateClip(clip);\n      this.setState({showConfirm:false});\n    }\n\n  }\n  showConfirm(){\n    this.setState({showConfirm:true});\n  }\n  onCancelUdpate(){\n    this.setState({showConfirm:false});\n  }\n\n  render() {\n    let tu = new TimeUtils();\n\n    return (<div>\n      <div>\n        <h5>New Clip</h5>\n        <Input placeholder='Name...' fluid value={this.state.name} onChange={this.onNameChange}/><br/>\n        <Input fluid type=\"range\" onChange={this.onStartChange} value={this.state.start} min=\"0\" max={Math.round(this.props.store.duration.get())-1}  />\n        <Label color=\"black\">\n          <Icon name='time' /> Start: {tu.toTimeString(this.state.start)}\n        </Label>\n\n        <Input type=\"range\" fluid onChange={this.onEndChange}  value={this.state.end} min={this.state.start} max={Math.round(this.props.store.duration.get())} />\n        <Label color=\"black\">\n          <Icon name='time' /> End:   {tu.toTimeString(this.state.end)}\n        </Label>\n        <hr/>\n        <div>\n          <Button disabled={!(this.state.name!==\"\"&&this.state.end>0)} onClick={this.props.update?this.showConfirm:this.addClip} primary fluid>{this.state.update?\"Update\":\"Add\"}</Button>\n        </div>\n      </div>\n      {this.props.update?<Confirm\n        open={this.state.showConfirm}\n        onCancel={this.onCancelUdpate}\n        onConfirm={this.addClip}\n      />:\"\"}\n\n    </div>);\n  }\n}\n))\n","import React from 'react';\nimport {Card, Button,Icon,Grid,Segment } from 'semantic-ui-react';\nimport ClipForm from '../../clipform/ClipForm';\n\nimport {TimeUtils} from '../../../utils/utils';\nimport {observer, inject} from 'mobx-react';\n\nimport \"./Main.css\"\n\nexport default  inject('store')(observer( class MainVideo extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {start:0,end:0,name:\"\",showForm:false};\n    this.toggleForm = this.toggleForm.bind(this);\n    this.playNext = this.playNext.bind(this);\n    this.playPrevious = this.playPrevious.bind(this);\n    this.togglePlayer = this.togglePlayer.bind(this);\n\n  }\n  componentDidMount(){\n    document.body.onkeypress = (e)=>{\n      if (e.ctrlKey){\n        if(e.charCode===10)\n        {\n          this.props.store.playNext();\n        }\n        if(e.charCode===26)\n        {\n          this.props.store.playPrevious();\n        }\n      }\n\n    }\n  }\n  togglePlayer(){\n    this.props.store.requestTogglePlayer();\n  }\n  toggleForm(){\n    this.setState({showForm:!this.state.showForm})\n  }\n  playNext(){\n    this.props.store.playNext();\n  }\n  playPrevious(){\n    this.props.store.playPrevious();\n  }\n  render() {\n    let tu = new TimeUtils();\n\n    return (<Card fluid className=\"main_video\" >\n      <Card.Content>\n        <Card.Meta  >\n          <Grid  >\n            <Grid.Row >\n              <Grid.Column>\n                <Segment  inverted><p >{this.props.store.playerState.get('title')||\"Main Video\"}</p> <p>{tu.toTimeString(this.props.store.playerState.get('current_time'))}/{tu.toTimeString(this.props.store.playerState.get('current_duration')||0)}</p></Segment>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width={16} textAlign=\"center\">\n                <Button.Group fluid inverted >\n                  <Button   color=\"twitter\" size=\"huge\" onClick={this.playPrevious}  icon>\n                    <Icon name='chevron left' />\n                  </Button>\n                  <Button  color=\"blue\" size=\"huge\" onClick={this.togglePlayer} icon>\n                    <Icon name={!this.props.store.playerState.get('playing')?\"video play\":'pause'}  />\n                  </Button>\n                  <Button   color=\"twitter\" size=\"huge\" onClick={this.playNext}  icon>\n                    <Icon name='chevron right' />\n                  </Button>\n                </Button.Group>\n              </Grid.Column>\n\n\n            </Grid.Row>\n            {!this.props.store.readonly.get()?\n              <Grid.Row>\n                <Grid.Column width={16}>\n                  <Button icon color={!this.state.showForm?\"green\":\"orange\"} onClick={this.toggleForm} size=\"mini\" floated=\"right\" labelPosition='right'>\n                    {(!this.state.showForm?\"Add Clip\":\"Hide Form\")}<Icon name={(!this.state.showForm?\"add\":\"up arrow\")} />\n                  </Button>\n                </Grid.Column>\n              </Grid.Row>:\"\"\n            }\n\n\n\n          </Grid>\n\n        </Card.Meta>\n      </Card.Content>\n      <Card.Content extra>\n        <Segment style={{display:(!this.state.showForm)?\"none\":\"block\"}}>\n          <ClipForm {...this.state} update={false}/>\n        </Segment>\n      </Card.Content>\n    </Card>);\n  }\n}\n))\n","import React from 'react';\nimport { List,Grid,Icon,Confirm} from 'semantic-ui-react';\nimport ClipForm from '../../clipform/ClipForm';\n\nimport {TimeUtils} from '../../../utils/utils';\nimport {inject,observer} from 'mobx-react'\n\nimport \"./ListItem.css\";\n\nexport default inject('store')(observer(class ListItem extends React.Component {\n  constructor(props){\n    super(props);\n    this.state ={editing:false,showDeleteConfirmDialog:false};\n    this.onItemClick = this.onItemClick.bind(this);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n    this.toggleEditing = this.toggleEditing.bind(this);\n    this.showDeleteConfirmDialog = this.showDeleteConfirmDialog.bind(this);\n    this.onCancelDeleteDialog = this.onCancelDeleteDialog.bind(this);\n\n\n  }\n  onItemClick(){\n    if(this.props.index === this.props.store.playerState.get('current_clip_index'))\n    {\n      this.props.store.requestTogglePlayer();\n    }else{\n      this.props.store.playClip(this.props.index)\n    }\n\n  }\n  onDeleteClick(){\n    var item = this.props.store.clips.filter((clip)=>this.props.id === clip.id)[0];\n    this.props.store.removeClip(item);\n    this.setState({showDeleteConfirmDialog:false});\n  }\n  showDeleteConfirmDialog(){\n    this.setState({showDeleteConfirmDialog:true});\n  }\n  onCancelDeleteDialog(){\n    this.setState({showDeleteConfirmDialog:false});\n  }\n  toggleEditing(){\n    this.setState({editing:!this.state.editing})\n  }\n  render() {\n    let tu = new TimeUtils();\n    let Tag = this.props.as;\n    return (<Tag className={\"item-clip \"+(this.props.index === this.props.store.playerState.get('current_clip_index')?\"playing\":\"\")} >\n      <Icon name={this.props.store.playerState.get('playing') && this.props.store.playerState.get('current_clip_index') === this.props.index ?\"pause\":\"play\"} className=\"action_icon\"  onClick={this.onItemClick} />\n      <List.Content >\n        <List.Header>{this.props.name}</List.Header>\n        {!this.props.readonly?<List.Description as=\"div\" className=\"clip-description\">\n          <Grid>\n            <Grid.Column width={6}><b>Start:&nbsp;</b>{tu.toTimeString(this.props.start)}</Grid.Column>\n            <Grid.Column width={6}><b>End:&nbsp;</b>{tu.toTimeString(this.props.end)}</Grid.Column>\n            {!this.props.store.readonly.get()?\n              <Grid.Column width={2}>\n                {(!this.props.playing&&!this.props.main)?<Icon name={this.state.editing?\"checkmark\":\"edit\"} onClick={this.toggleEditing} className=\"action_icon\" size=\"big\" color=\"blue\" />:\"\"}\n              </Grid.Column>:\"\"\n            }\n            {!this.props.store.readonly.get()?\n              <Grid.Column width={2}>\n                {(!this.props.playing&&!this.state.editing&&!this.props.main)?<Icon name=\"remove\" onClick={this.showDeleteConfirmDialog} className=\"action_icon\" size=\"big\" color=\"red\" />:\"\"}\n              </Grid.Column>:\"\"\n            }\n\n\n          </Grid>\n          {!this.props.store.readonly.get()?\n            <Grid>\n              <Grid.Column width={16}>\n                {(this.state.editing&&!this.props.playing&&!this.props.main)?<ClipForm id={this.props.id} name={this.props.name} start={this.props.start} end={this.props.end} update={true}  />:\"\"}\n              </Grid.Column>\n            </Grid>:\"\"}\n\n          </List.Description>:\"\"}\n\n        </List.Content>\n        <Confirm\n          open={this.state.showDeleteConfirmDialog}\n          onCancel={this.onCancelDeleteDialog}\n          onConfirm={this.onDeleteClick}\n        />\n      </Tag>);\n    }\n  }\n))\n","import React from 'react';\nimport { List as SemanticList,Transition} from 'semantic-ui-react';\nimport ListItem  from './ListItem';\n\nimport {observer,inject} from 'mobx-react';\n\nexport default inject('store')(observer(class List extends React.Component {\n  componentDidMount(){\n    if(this.props.playlist)\n    {\n      this.props.playlist.map((clip)=>{\n        this.props.store.addClip(clip);\n        return clip;\n      })\n    }\n  }\n\n  render() {\n    return (\n      <Transition.Group\n        as={SemanticList}\n        duration={200}\n        divided\n        color=\"white\"\n        size=\"large\"\n        verticalAlign='middle'\n        >\n\n\n          {\n            this.props.store.clips.map((clip,k)=>{\n              return <ListItem as={SemanticList.Item} key={k} index={k} {...clip} readonly = {this.props.readonly} />\n            })\n          }\n        </Transition.Group>\n      );\n    }\n  }\n));\n","import React from 'react';\nimport { Segment} from 'semantic-ui-react';\nimport Main from './main/Main';\nimport List from './list/List';\nexport default class Sidebar extends React.Component {\n\n\n  render() {\n    return (<Segment >\n      <Main />\n      <List readonly={false}/>\n    </Segment>);\n  }\n}\n","import React from 'react';\nimport {Segment,Dimmer,Loader} from 'semantic-ui-react';\n\nimport {observer, inject} from 'mobx-react';\n\nexport default inject('store')(observer( class Content extends React.Component {\n  constructor(props){\n    super(props);\n    this.onVideoLoaded = this.onVideoLoaded.bind(this)\n    this.state = {firstLoad:true,paused:true}\n  }\n  onVideoLoaded(){\n    let playerState = this.props.store.playerState;\n    if(this.state.firstLoad)\n    {\n      this.props.store.setPlayerProperties(this.refs.video);\n      this.refs.video.addEventListener('pause',()=>{\n        let curr_clip_index = playerState.get('current_clip_index');\n        let curr_clip = this.props.store.clips[curr_clip_index];\n        if(parseInt(playerState.get('current_time'),10)+parseInt(curr_clip.start,10) === parseInt(curr_clip.end,10))\n        {\n          this.props.store.videoLoadingStarted();\n          setTimeout(()=>{this.props.store.playNext();return;},3000);\n        }else{\n          this.props.store.playerState.set('playing',false);\n        }\n      },false);\n      this.refs.video.addEventListener('play',()=>{\n        this.props.store.playerState.set('playing',true);\n      },false);\n      this.refs.video.addEventListener('loadstart',()=>{\n        this.props.store.videoLoadingStarted();\n      });\n      this.refs.video.addEventListener('timeupdate',(e)=>{\n        this.props.store.updatePlayerCurrentTime(e.target.currentTime);\n      },false);\n      this.refs.video.addEventListener('loadeddata',()=>{\n        this.props.store.videoLoadingFinished();\n\n      });\n      this.setState({firstLoad:false})\n    }\n\n  }\n  componentWillUpdate(prevProps, prevState){\n    if(this.props.store.playerState.get('toggle_requested'))\n    {\n\n      if(this.state.paused)\n      {\n        this.refs.video.play();\n        this.setState({paused:false})\n      }else{\n        this.refs.video.pause();\n        this.setState({paused:true})\n      }\n      this.props.store.playerState.set('toggle_requested',false)\n    }\n    if(this.props.store.playerState.get('new_play_requested'))\n    {\n      this.refs.video.load();\n      this.refs.video.play();\n      this.setState({paused:false})\n      this.props.store.playerState.set('new_play_requested',false);\n    }\n\n\n  }\n  render() {\n    let current_clip = this.props.store.clips[this.props.store.playerState.get('current_clip_index')];\n    let start = 0;\n    let end = this.props.store.duration.get();\n    if(current_clip !== undefined)\n    {\n      start = current_clip.start;\n      end = current_clip.end;\n    }\n    let is_loading = this.props.store.playerState.get(\"loading\")||this.props.store.playerState.get('new_play_requested') || this.props.store.playerState.get('toggle_requested');\n    return (\n      <Segment inverted>\n        {is_loading? <Dimmer active>\n          <Loader size='tiny'>Loading</Loader>\n        </Dimmer>:\"\"}\n        <video style={{visibility:is_loading?\"hidden\":\"visible\"}} controls  ref=\"video\" onLoadedMetadata={this.onVideoLoaded}  preload=\"metadata\" width=\"100%\"  >\n          <source src={this.props.url+\"#t=\"+(start||0)+\",\"+(end||\"\")} type='video/mp4;codecs=\"avc1.42E01E, mp4a.40.2\"'/>\n        </video>\n      </Segment>\n    );\n  }\n}\n));\n","import {observable,action,reaction} from 'mobx';\n\nclass AppStore {\n  constructor(){\n    this.next_sent = false;\n    // Player related state\n    // Object of player properties\n    this.playerState = observable.map();\n    // true when video is playing\n    this.playerState.set('playing',false);\n    // true when play/pause is requested\n    this.playerState.set('toggle_requested',false);\n    // true when a playlist item playbutton was clicked\n    this.playerState.set('new_play_requested',false);\n    // true when video loadstart is launched\n    this.playerState.set('loading',false);\n    // player title\n    this.playerState.set('title',false);\n    // current clip duration\n    this.playerState.set('current_duration',0);\n    // updated by updatetime event of player\n    this.playerState.set('current_time',0);\n    // the current clip index used to play/pause/next/previous\n    this.playerState.set('current_clip_index',0);\n    this.readonly = observable(false);\n    // Playlist related state (For saving)\n    this.playlistState = observable.map();\n    this.playlistState.set('changed',false);\n\n    // Initialize playlist (If exist in localstorage it will use the persistent list)\n    this.clips = observable(JSON.parse(localStorage.getItem('playlist'))||[]);\n    this.video = observable({});\n    this.videoloading = observable(false);\n    this.duration = observable(0);\n\n    //Video Player actions\n    this.playClip = action(this.playClip)\n    this.playPrevious = action(this.playPrevious);\n    this.playNext = action(this.playNext);\n    this.setPlayerProperties = action(this.setPlayerProperties);\n    this.videoLoadingStarted = action(this.videoLoadingStarted);\n    this.videoLoadingFinished = action(this.videoLoadingFinished);\n    this.updatePlayerCurrentTime = action(this.updatePlayerCurrentTime);\n    this.requestTogglePlayer = action(this.requestTogglePlayer);\n    // Clip related actions\n    this.addClip = action(this.addClip);\n    this.removeClip = action(this.removeClip);\n    this.updateClip = action(this.updateClip);\n    this.savePlayList = action(this.savePlayList);\n    this.playListChanged = this.playListChanged.bind(this);\n    this.playListChanged = reaction(()=>this.clips.map((clip)=>clip.name),this.playListChanged)\n\n\n  }\n// Clip management related actions\n  addClip(clip){\n    clip.playing=false;\n    clip.id = Date.now();\n    clip.main = false;\n    this.clips.push(clip);\n  }\n  updateClip(clip){\n    clip.playing=false;\n    this.clips.replace(this.clips.map((c)=>{\n      if(c.id === clip.id)\n      {\n        return clip;\n      }\n      return c;\n    }));\n  }\n  removeClip(clip){\n    this.clips.remove(clip);\n  }\n  /*\n      Playlist related actions\n  */\n  savePlayList(){\n    localStorage.setItem(\"playlist\",JSON.stringify(this.clips.toJS()));\n    this.playlistState.set('changed',false);\n  }\n\n  // Reaction for playlist updates to show save message\n  playListChanged(){\n    this.playlistState.set(\"changed\",true);\n  }\n\n\n  /*\n   Player related Actions\n   */\n  setPlayerProperties(video){\n    this.video=video;\n    this.playerState.set('current_duration',video.duration)\n    this.duration.set(video.duration);\n    if(this.clips.length<1)\n    this.clips.push({name:\"Main Video\",start:0,end:video.duration,main:true,playing:false});\n  }\n\n  playClip(i){\n    this.clips.map((clip,index)=>{\n      if(i === index)\n      {\n        this.playerState.set('current_clip_index',index);\n        this.playerState.set('title',clip.name);\n        this.playerState.set('current_duration',clip.end-clip.start);\n        this.playerState.set('current_time',0);\n        this.playerState.set('new_play_requested',true);\n        clip.playing=true;\n\n      }else{\n        clip.playing=false;\n      }\n      return clip;\n    })\n  }\n\n  playPrevious(){\n    let previous_index = this.playerState.get('current_clip_index') - 1;\n    if(previous_index>=0)\n    {\n      this.playClip(previous_index);\n    }else{\n      this.playClip(this.clips.length-1);\n    }\n\n  }\n  playNext(){\n    let count = this.clips.length;\n    let next_index = this.playerState.get('current_clip_index') + 1;\n    if(next_index<count)\n    {\n      this.playClip(next_index);\n    }else{\n      this.playClip(0);\n    }\n\n  }\n\n\n  videoLoadingStarted(){\n    if(!this.playerState.get('loading'))\n    this.playerState.set('loading',true);\n  }\n  videoLoadingFinished(){\n    this.playerState.set('loading',false);\n  }\n  updatePlayerCurrentTime(time){\n    let current_clip_start_time = this.clips[this.playerState.get('current_clip_index')].start;\n    if(time - current_clip_start_time > 0)\n    this.playerState.set('current_time',time - current_clip_start_time);\n    else\n    this.playerState.set('current_time',0);\n  }\n  requestTogglePlayer(){\n    this.playerState.set('toggle_requested',true);\n  }\n /*\n  Application General state actions\n */\n\n  setReadOnly(){\n    this.readonly.set(true);\n  }\n  setPlayList(playlist){\n    this.clips.replace(playlist.map((item)=>{\n      return item;\n    }))\n  }\n}\n\nexport default new AppStore();\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Grid, Container } from 'semantic-ui-react'\nimport Header from './components/header/Header';\nimport Sidebar from './components/sidebar/Sidebar';\nimport Content from './components/content/Content';\nimport 'semantic-ui-css/semantic.min.css';\nimport {Provider} from 'mobx-react'\nimport AppStore from './store/appstore';\nclass App extends Component {\n  componentWillMount(){\n    if(this.props.readonly)\n    {\n      AppStore.setReadOnly()\n      if(this.props.playlist.length>0)\n      AppStore.setPlayList(this.props.playlist)\n    }\n\n  }\n  render() {\n    return (\n      <Provider store={AppStore}>\n        <Container fluid className=\"App\">\n          <Header url = {this.props.url} />\n          <Grid divided='vertically'>\n            <Grid.Column mobile={16} widescreen={12} largeScreen={10}  computer={10} tablet={16}>\n              <Content url={this.props.url} />\n            </Grid.Column >\n            <Grid.Column  mobile={16} widescreen={4} largeScreen={6} computer={6}  tablet={16}>\n              <Sidebar />\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </Provider>\n\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}